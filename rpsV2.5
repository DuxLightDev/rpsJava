/* notes for rps project: have method for each of the win prints aka you win, you lose, you tie
have reset  method
use else if; also will update this notes */

/* learn lists, and also pseudocode:

*/

import java.util.Scanner;
import java.util.Random;

public class rpsV3 {

public static int restartVar = 1;
public static int resetVar = 1;
public static Scanner scanner = new Scanner(System.in);

  public static void tryAgain(){
    System.out.println("\nInvalid response!");
    reset();
  }

  public static void tryAgainAlt(){
    System.out.println("\nInvalid response!");
    resetAlt();
    
  }

  public static void resetAlt() {
    System.out.println("\nWould you like to play a new game? \nEnter reset to play a new game: \nIf you would like to restart, enter restart:");
    String resetText = scanner.nextLine();
    // or figure out way to use gameChoice to check if single or multi to know to reset which one
    // use different variable for single player, maybe replayText which allows us to know if it is singleplayer or multi instead of checkign whether gameChoice was multi or single
    if(!resetText.equals("reset") && !resetText.equals("restart")){
      tryAgainAlt();
    } else{
      if(resetText.equals("reset")){
        System.out.println("\n");
        singleplayer();
      } else if(resetText.equals("restart")){
        System.out.println("\n");
        restartVar--;
      }
    }
  }

  public static void reset() {
    System.out.println("\nWould you like to play a new game? \nEnter reset to play a new game: \nIf you would like to restart, enter restart:");
    String resetText = scanner.nextLine();
    // or figure out way to use gameChoice to check if single or multi to know to reset which one
    // use different variable for single player, maybe replayText which allows us to know if it is singleplayer or multi instead of checkign whether gameChoice was multi or single
    if(!resetText.equals("reset") && !resetText.equals("restart")){
      tryAgain();
    } else{
      if(resetText.equals("reset")){
        System.out.println("\n");
        resetVar--;
      } else if(resetText.equals("restart")){
        System.out.println("\n");
        restartVar--;
      }
    }
  }

  public static void main(String[] args){ 
    //find something to clear console to add right here, will mak ethings a lot nicer 
    while (restartVar == 1){
      String welcome = "Welcome to Rock Paper Scissors!\n";
      for (int index = 0; index < welcome.length(); index++){
        char letter = welcome.charAt(index);
        System.out.print(letter);
        try{
          Thread.sleep(100);

        } catch(InterruptedException e) {

        }
      }
      System.out.println("\nEnter multiplayer to play against a friend:\nEnter singleplayer to play against an AI:");
      String gameChoice = scanner.nextLine();
      if(resetVar == 2){
          resetVar--;
      }
      if(gameChoice.equals("multiplayer")){
        multiplayer();
        restartVar++;
      } else if(gameChoice.equals("singleplayer")){
        singleplayer();
        restartVar++;

      }
    }
  }

  public static void singleplayer() {
    String aiArray[];
    aiArray = new String[3];
    aiArray[0] = "rock";
    aiArray[1] = "paper";
    aiArray[2] = "scissors";
    Random random = new Random();
    int aiChoice = random.nextInt(3);

    System.out.println("\nEnter your move as shown: rock, paper, or scissors:\n");
    String playerChoice = scanner.nextLine();
    if(!playerChoice.equals(aiArray[0]) && !playerChoice.equals(aiArray[1]) && !playerChoice.equals(aiArray[2])){
      System.out.println("\nInvalid option!");
      singleplayer();
    } else {
      if(playerChoice.equals(aiArray[aiChoice])){
        System.out.println("\nYou chose: " + playerChoice + "\nThe AI chose: " + aiArray[aiChoice] + "\nIt was a tie!");
        resetAlt();

      } else if(playerChoice.equals("rock") && aiChoice == 1){
        System.out.println("\nYou chose: " + playerChoice + "\nThe AI chose: " + aiArray[aiChoice] + "\nThe AI won!");
        resetAlt();

      } else if(playerChoice.equals("rock") && aiChoice == 2){
        System.out.println("\nYou chose: " + playerChoice + "\nThe AI chose: " + aiArray[aiChoice] + "\nYou won!");
        resetAlt();

      } else if(playerChoice.equals("paper") && aiChoice == 0){
        System.out.println("\nYou chose: " + playerChoice + "\nThe AI chose: " + aiArray[aiChoice] + "\nYou won!");
        resetAlt();

      } else if(playerChoice.equals("paper") && aiChoice == 2){
        System.out.println("\nYou chose: " + playerChoice + "\nThe AI chose: " + aiArray[aiChoice] + "\nThe AI won!");
        resetAlt();

      } else if(playerChoice.equals("scissors") && aiChoice == 0){
        System.out.println("\nYou chose: " + playerChoice + "\nThe AI chose: " + aiArray[aiChoice] + "\nThe AI won!");
        resetAlt();

      } else if(playerChoice.equals("scissors") && aiChoice == 1){
        System.out.println("\nYou chose: " + playerChoice + "\nThe AI chose: " + aiArray[aiChoice] + "\nYou won!");
        resetAlt();
      }
    }
  }

  public static void multiplayer() {
    
    while (resetVar == 1) {
      System.out.println("\nEnter Player One name: ");
      String playerOne = scanner.nextLine();
      resetVar++;

      System.out.println("\nEnter Player Two name: ");
      String playerTwo = scanner.nextLine();

      System.out.println("\nPlayer One is: " + playerOne + "\nPlayer Two is: " + playerTwo + "\n");

      int playerOneMove = 1;
      while (playerOneMove == 1) {

        System.out.println(playerOne + ", enter your move as shown, rock, paper, or scissors:");

        String moveOne = scanner.nextLine();
        System.out.print(String.format("\033[%dA", 1)); // Move up a line
        System.out.print("\033[2K"); // Erase line content
        System.out.print("\n");

        if(!moveOne.equals("rock") && !moveOne.equals("scissors") && !moveOne.equals("paper")) {
          System.out.println("That is an invalid move!\n");
        } else {
          playerOneMove++;

          int playerTwoMove = 1;
          while (playerTwoMove == 1) {
            System.out.println(playerTwo + ", enter your move as shown, rock, paper, or scissors:");

            String moveTwo = scanner.nextLine();
            System.out.print(String.format("\033[%dA", 1)); // Move up a line
            System.out.print("\033[2K"); // Erase line content
            System.out.print("\n");

            if(!moveTwo.equals("rock") && !moveTwo.equals("paper") && !moveTwo.equals("scissors")){
              System.out.println("That is an invalid move!\n");
            } else {
              playerTwoMove++;

              if(moveOne.equals("rock")){
                if(moveTwo.equals("rock")){
                  System.out.println(playerOne + " chose: " + moveOne + "\n" + playerTwo + " chose: " + moveTwo + "\nIt was a tie!");
                  reset();
                  
                } else if(moveTwo.equals("paper")){
                  System.out.println(playerOne + " chose: " + moveOne + "\n" + playerTwo + " chose: " + moveTwo + "\n" + playerTwo + " won!");
                  reset();

                } else if(moveTwo.equals("scissors")){
                  System.out.println(playerOne + " chose: " + moveOne + "\n" + playerTwo + " chose: " + moveTwo + "\n" + playerOne + " won!");
                  reset();
                }
              } else if(moveOne.equals("paper")){
                if(moveTwo.equals("rock")){
                System.out.println(playerOne + " chose: " + moveOne + "\n" + playerTwo + " chose: " + moveTwo + "\n" + playerOne + " won!");
                reset();

                } else if(moveTwo.equals("paper")){
                  System.out.println(playerOne + " chose: " + moveOne + "\n" + playerTwo + " chose: " + moveTwo + "\nIt was a tie!");
                  reset();

                } else if(moveTwo.equals("scissors")){
                  System.out.println(playerOne + " chose: " + moveOne + "\n" + playerTwo + " chose: " + moveTwo + "\n" + playerTwo + " won!");
                  reset();
                }
              } else if(moveOne.equals("scissors")){
                if(moveTwo.equals("rock")){
                System.out.println(playerOne + " chose: " + moveOne + "\n" + playerTwo + " chose: " + moveTwo + "\n" + playerTwo + " won!");
                reset();
                
                } else if(moveTwo.equals("paper")){
                  System.out.println(playerOne + " chose: " + moveOne + "\n" + playerTwo + " chose: " + moveTwo + "\n" + playerOne + " won!");
                  reset();

                } else if(moveTwo.equals("scissors")){
                  System.out.println(playerOne + " chose: " + moveOne + "\n" + playerTwo + " chose: " + moveTwo + "\nIt was a tie!");
                  reset();
                }
              }
            }

          }
        }

      }
    }

  }
}
